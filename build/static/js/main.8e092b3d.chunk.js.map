{"version":3,"sources":["api/index.js","constants/actionTypes.js","components/Posts/Post/styles.js","components/Posts/Post/Post.js","actions/posts.js","components/Posts/styles.js","components/Posts/Posts.js","components/Form/styles.js","components/Form/Form.js","styles.js","App.js","reducers/posts.js","reducers/index.js","index.js"],"names":["url","updatePost","id","postData","axios","patch","deletePost","delete","likePost","actions","makeStyles","media","height","paddingTop","backgroundColor","backgroundBlendMode","border","fullHeightCard","card","display","flexDirection","justifyContent","borderRadius","position","overlay","top","left","color","overlay2","right","grid","details","margin","title","padding","cardActions","Post","post","setCurrentId","classes","useStyles","dispatch","useDispatch","Card","className","CardMedia","image","selectedFile","Typography","variant","author","moment","createdAt","fromNow","Button","style","size","onClick","_id","fontSize","tags","map","tag","gutterBottom","CardContent","component","body","CardActions","a","api","data","type","payload","console","error","likeCount","theme","mainContainer","alignItems","smMargin","spacing","actionDiv","textAlign","Posts","posts","useSelector","state","log","length","Grid","container","item","xs","sm","CircularProgress","root","paper","form","flexWrap","fileInput","width","buttonSubmit","marginBottom","Form","currentId","useState","selectedFiles","setPostData","find","p","useEffect","clear","Paper","autoComplete","noValidate","onSubmit","e","preventDefault","newPost","createPost","TextField","name","label","fullWidth","value","onChange","target","replace","split","appBar","heading","marginLeft","breakpoints","down","App","get","Container","maxWidth","AppBar","align","Grow","in","justify","FETCH_ALL","CREATE","UPDATE","DELETE","reducer","action","filter","combineReducers","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8e092b3d.chunk.js","sourcesContent":["// Absolute imports\nimport axios from \"axios\";\n\nconst baseURL = \"https://bakepedia.herokuapp.com\";\nconst url = `${baseURL}/posts`;\n\n// Fetch Posts\nexport const fetchPosts = () => axios.get(url);\n\n// Create Post\nexport const createPost = (newPost) => axios.post(url, newPost);\n\n// Update Post\nexport const updatePost = (id, postData) =>\n  axios.patch(`${url}/${id}`, postData);\n\n// Delete Post\nexport const deletePost = (id) => axios.delete(`${url}/${id}`);\n\n// Like Post\nexport const likePost = (id) => axios.patch(`${url}/${id}/likePost`);\n","export const actions = {\n  CREATE: \"CREATE\",\n  UPDATE: \"UPDATE\",\n  DELETE: \"DELETE\",\n  DELETE_ALL: \"DELETE\",\n  FETCH: \"FETCH\",\n  FETCH_ALL: \"FETCH_ALL\",\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport default makeStyles({\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\",\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n    backgroundBlendMode: \"darken\",\n  },\n  border: {\n    border: \"solid\",\n  },\n  fullHeightCard: {\n    height: \"100%\",\n  },\n  card: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    borderRadius: \"15px\",\n    height: \"100%\",\n    position: \"relative\",\n  },\n  overlay: {\n    position: \"absolute\",\n    top: \"20px\",\n    left: \"20px\",\n    color: \"white\",\n  },\n  overlay2: {\n    position: \"absolute\",\n    top: \"20px\",\n    right: \"20px\",\n    color: \"white\",\n  },\n  grid: {\n    display: \"flex\",\n  },\n  details: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    margin: \"20px\",\n  },\n  title: {\n    padding: \"0 16px\",\n  },\n  cardActions: {\n    padding: \"0 16px 8px 16px\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n});\n","// Absolute imports\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Button,\n  Typography,\n} from \"@material-ui/core\";\nimport ThumbUpAltIcon from \"@material-ui/icons/ThumbUpAlt\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport moment from \"moment\";\n\n// Relative imports\nimport { deletePost, likePost } from \"../../../actions/posts\";\n\n// Relative imports\nimport useStyles from \"./styles\";\n\nconst Post = ({ post, setCurrentId }) => {\n  // Styles\n  const classes = useStyles();\n\n  // State\n  const dispatch = useDispatch();\n\n  return (\n    <Card className={classes.card}>\n      <CardMedia\n        className={classes.media}\n        image={post.selectedFile}\n        title={post.title}\n      />\n\n      <div className={classes.overlay}>\n        <Typography variant=\"h6\">{post.author}</Typography>\n        <Typography variant=\"body2\">\n          {moment(post.createdAt).fromNow()}\n        </Typography>\n      </div>\n\n      <div className={classes.overlay2}>\n        <Button\n          style={{ color: \"white\" }}\n          size=\"small\"\n          onClick={() => {\n            setCurrentId(post._id);\n          }}\n        >\n          <MoreHorizIcon fontSize=\"default\" />\n        </Button>\n      </div>\n\n      <div className={classes.details}>\n        <Typography variant=\"body2\" color=\"textSecondary\">\n          {post.tags.map((tag) => `#${tag} `)}\n        </Typography>\n      </div>\n\n      <Typography className={classes.title} variant=\"h5\" gutterBottom>\n        {post.title}\n      </Typography>\n\n      <CardContent>\n        <Typography\n          variant=\"body2\"\n          color=\"textSecondary\"\n          component=\"p\"\n          gutterBottom\n        >\n          {post.body}\n        </Typography>\n      </CardContent>\n\n      <CardActions className={classes.cardActions}>\n        <Button\n          size=\"small\"\n          color=\"primary\"\n          onClick={() => dispatch(likePost(post._id))}\n        >\n          <ThumbUpAltIcon fontSize=\"small\" />\n          &nbsp; Like &nbsp;\n          {post.likeCount}\n        </Button>\n\n        <Button\n          size=\"small\"\n          color=\"primary\"\n          onClick={() => dispatch(deletePost(post._id))}\n        >\n          <DeleteIcon fontSize=\"small\" />\n          Delete\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default Post;\n","// Relative imports\nimport * as api from \"../api\";\nimport { actions } from \"../constants/actionTypes\";\n\n// Action Creators\n// Functions that return actions\n\n// Get Posts\nexport const getPosts = () => async (dispatch) => {\n  try {\n    const { data } = await api.fetchPosts();\n\n    // Dipatch instead of returning\n    dispatch({ type: actions.FETCH_ALL, payload: data });\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// Create Post\nexport const createPost = (post) => async (dispatch) => {\n  try {\n    const { data } = await api.createPost(post);\n\n    dispatch({ type: actions.CREATE, payload: data });\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// Update Post\nexport const updatePost = (id, post) => async (dispatch) => {\n  try {\n    const { data } = await api.updatePost(id, post);\n\n    dispatch({ type: actions.UPDATE, payload: data });\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// Delete Post\nexport const deletePost = (id) => async (dispatch) => {\n  try {\n    await api.deletePost(id);\n\n    dispatch({ type: actions.DELETE, payload: id });\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// Like Post\nexport const likePost = (id) => async (dispatch) => {\n  try {\n    const { data } = await api.likePost(id);\n\n    dispatch({ type: actions.UPDATE, payload: data });\n  } catch (error) {\n    console.error(error);\n  }\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport default makeStyles((theme) => ({\n  mainContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  smMargin: {\n    margin: theme.spacing(1),\n  },\n  actionDiv: {\n    textAlign: \"center\",\n  },\n}));\n","// Absolute imports\nimport React from \"react\";\nimport { Grid, CircularProgress } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\n\n// Relative imports\nimport Post from \"./Post/Post\";\nimport useStyles from \"./styles\";\n\nconst Posts = ({ setCurrentId }) => {\n  const classes = useStyles();\n  const posts = useSelector((state) => state.posts);\n\n  console.log(posts);\n\n  return !posts.length ? (\n    <CircularProgress />\n  ) : (\n    <Grid\n      className={classes.container}\n      container\n      alignItems=\"stretch\"\n      spacing={3}\n    >\n      {posts.map((post) => (\n        <Grid key={post._id} item xs={12} sm={6}>\n          <Post post={post} setCurrentId={setCurrentId} />\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n\nexport default Posts;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport default makeStyles((theme) => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n    },\n  },\n  paper: {\n    padding: theme.spacing(2),\n  },\n  form: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\",\n  },\n  fileInput: {\n    width: \"97%\",\n    margin: \"10px 0\",\n  },\n  buttonSubmit: {\n    marginBottom: 10,\n  },\n}));\n","// Absolute imports\nimport React, { useState, useEffect } from \"react\";\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\n// Relative imports\nimport { createPost, updatePost } from \"../../actions/posts\";\nimport useStyles from \"./styles\";\n\nconst Form = ({ currentId, setCurrentId }) => {\n  // Styles\n  const classes = useStyles();\n\n  // State\n  const [postData, setPostData] = useState({\n    author: \"\",\n    title: \"\",\n    body: \"\",\n    tags: \"\",\n    selectedFiles: \"\",\n  });\n\n  // If a post _id is selected, find the post data for the matching _id\n  const post = useSelector((state) =>\n    currentId ? state.posts.find((p) => p._id === currentId) : null\n  );\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  // Event handlers\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (currentId) {\n      dispatch(updatePost(currentId, postData));\n    } else {\n      dispatch(createPost(postData));\n    }\n\n    clear();\n  };\n\n  const clear = () => {\n    setCurrentId(null);\n    setPostData({\n      author: \"\",\n      title: \"\",\n      body: \"\",\n      tags: \"\",\n      selectedFiles: \"\",\n    });\n  };\n\n  return (\n    <Paper className={classes.paper}>\n      <form\n        autoComplete=\"off\"\n        noValidate\n        className={`${classes.root} ${classes.form}`}\n        onSubmit={handleSubmit}\n      >\n        <Typography variant=\"h6\">\n          {currentId ? \"Edit\" : \"Share\"} Recipe\n        </Typography>\n        <TextField\n          name=\"author\"\n          variant=\"outlined\"\n          label=\"Author\"\n          fullWidth\n          value={postData.author}\n          onChange={(e) => setPostData({ ...postData, author: e.target.value })}\n        />\n        <TextField\n          name=\"title\"\n          variant=\"outlined\"\n          label=\"Title\"\n          fullWidth\n          value={postData.title}\n          onChange={(e) => setPostData({ ...postData, title: e.target.value })}\n        />\n        <TextField\n          name=\"body\"\n          variant=\"outlined\"\n          label=\"Body\"\n          fullWidth\n          value={postData.body}\n          onChange={(e) => setPostData({ ...postData, body: e.target.value })}\n        />\n        <TextField\n          name=\"tags\"\n          variant=\"outlined\"\n          label=\"Tags\"\n          fullWidth\n          value={postData.tags}\n          onChange={(e) =>\n            setPostData({\n              ...postData,\n              tags: e.target.value.replace(\" \", \"\").split(\",\"),\n            })\n          }\n        />\n\n        {/* <div className={classes.fileInput}>\n            TODO: upload image data using base64\n        </div> */}\n\n        <Button\n          className={classes.buttonSubmit}\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"large\"\n          type=\"submit\"\n          fullWidth\n        >\n          {currentId ? \"SAVE\" : \"SHARE\"}\n        </Button>\n\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"small\"\n          onClick={clear}\n          fullWidth\n        >\n          CLEAR\n        </Button>\n      </form>\n    </Paper>\n  );\n};\n\nexport default Form;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport default makeStyles((theme) => ({\n  appBar: {\n    borderRadius: 15,\n    margin: \"30px 0\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  heading: {\n    color: \"rgba(0,183,255, 1)\",\n  },\n  image: {\n    marginLeft: \"15px\",\n  },\n  [theme.breakpoints.down(\"sm\")]: {\n    mainContainer: {\n      flexDirection: \"column-reverse\",\n    },\n  },\n}));\n","// Absolute imports\nimport React, { useState, useEffect } from \"react\";\nimport { Container, AppBar, Typography, Grow, Grid } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\n\n// Relative imports\nimport Posts from \"./components/Posts/Posts\";\nimport Form from \"./components/Form/Form\";\nimport { getPosts } from \"./actions/posts\";\nimport useStyles from \"./styles\";\n// import icon from './images/icon.png';\n\nconst App = () => {\n  const classes = useStyles();\n  const [currentId, setCurrentId] = useState(null);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getPosts());\n  }, [currentId, dispatch]);\n\n  return (\n    <Container maxWidth=\"lg\">\n      <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\n        <Typography className={classes.heading} variant=\"h2\" align=\"center\">\n          bakepedia\n        </Typography>\n        {/* <img className={classes.image} src={icon} alt=\"bakepedia\" height=\"60\"/> */}\n      </AppBar>\n      <Grow in>\n        <Container>\n          <Grid\n            className={classes.mainContainer}\n            container\n            justify=\"space-between\"\n            alignItems=\"stretch\"\n            spacing={3}\n          >\n            <Grid item xs={12} sm={7}>\n              <Posts setCurrentId={setCurrentId} />\n            </Grid>\n\n            <Grid item xs={12} sm={7}>\n              <Form currentId={currentId} setCurrentId={setCurrentId} />\n            </Grid>\n          </Grid>\n        </Container>\n      </Grow>\n    </Container>\n  );\n};\n\nexport default App;\n","// Relative imports\nimport { actions } from \"../constants/actionTypes\";\n\nconst { FETCH_ALL, CREATE, UPDATE, DELETE } = actions;\n\nconst reducer = (posts = [], action) => {\n  switch (action.type) {\n    case FETCH_ALL:\n      return action.payload;\n    case CREATE:\n      return [...posts, action.payload];\n    case UPDATE:\n      return posts.map((post) =>\n        post._id === action.payload._id ? action.payload : post\n      );\n    case DELETE:\n      return posts.filter((post) => post._id !== action.payload);\n    default:\n      return posts;\n  }\n};\n\nexport default reducer;\n","// Absolute imports\nimport { combineReducers } from \"redux\";\n\n// Relative imports\nimport posts from \"./posts\";\n\nexport default combineReducers({\n  posts,\n});\n","// Absolute imports\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\n\n// Relative imports\nimport App from \"./App\";\nimport reducers from \"./reducers\";\nimport \"./index.css\";\n\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}